<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?rfc toc="yes"?>
<?rfc tocompact="yes"?>
<?rfc tocdepth="2"?>
<?rfc tocindent="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<rfc category="std"
     docName="draft-tgraf-netconf-yang-push-observation-time-01"
     ipr="trust200902">
  <front>
    <title abbrev="YANG Notifications Observation Time">Support of Observation
    Timestamp in YANG-Push Notifications</title>

    <author fullname="Thomas Graf" initials="T" surname="Graf">
      <organization>Swisscom</organization>

      <address>
        <postal>
          <street>Binzring 17</street>

          <city>Zurich</city>

          <code>8045</code>

          <country>Switzerland</country>
        </postal>

        <email>thomas.graf@swisscom.com</email>
      </address>
    </author>

    <author fullname="Benoit Claise" initials="B" surname="Claise">
      <organization>Huawei</organization>

      <address>
        <email>benoit.claise@huawei.com</email>
      </address>
    </author>

    <author fullname="Alex Huang Feng" initials="A." surname="Huang Feng">
      <organization>INSA-Lyon</organization>

      <address>
        <postal>
          <street/>

          <city>Lyon</city>

          <region/>

          <code/>

          <country>France</country>
        </postal>

        <phone/>

        <facsimile/>

        <email>alex.huang-feng@insa-lyon.fr</email>

        <uri/>
      </address>
    </author>

    <date day="08" month="June" year="2024"/>

    <abstract>
      <t>This document extends the YANG-Push Notification header with the YANG
      objects observation timestamp and timestamp type for streaming update
      notifications.</t>
    </abstract>
  </front>

  <middle>
    <section anchor="Introduction" title="Introduction">
      <t>To correlate network data among different Network Telemetry planes as
      described in Section 3.1 of <xref target="RFC9232"/> or among different
      YANG-Push subscription types defined in Section 3.1 of <xref
      target="RFC8641"/>, network observation timestamping describes when the
      state change was observed or from when to when the data was accounted.
      This is essential for understanding the timely relationship among these
      different planes and YANG push subscription types.</t>

      <t>With <xref target="I-D.tgraf-netconf-notif-sequencing"/> the delay
      between the YANG Notification export and the arrival at the downstream
      system storing the data can be measured. With network observation
      timestamping described in this document, the delay between the network
      observation and the data export of the YANG push publisher process can
      be measured as well, extending the delay measurement scope from the time
      the network observation and storing the data.</t>

      <t>When the time bucket length in a time series database and the
      periodical YANG push subscription time is identical, the eventTime of
      the netconf notification message header is used for indexing, there is
      variable delay between the observation time and the eventTime, and the
      anchor-time as described in Section 4.2 of <xref target="RFC8641"/> is
      close to the time bucket boundaries, a time bucket is going to have
      periodically 0 or 2 measurements indexed instead of 1. Leading to
      inconsistent accounting errors in the time series database. This problem
      is resolved by using the observation-time instead of the eventTime for
      time series database indexing.</t>

      <t>By extending the YANG-Push Notification header with the YANG objects
      observation-time and point-in-time for streaming update notifications it
      is ensured that the "observation-time" timestamp is always present with
      the best available time, can be therefore used unconditionally in the
      data processing chain and with point-in-time there is semantic
      describing the when it was observed in time.</t>
    </section>

    <section title="Terminologies">
      <t>The following terms are defined in <xref target="RFC8639"/> and are
      not redefined here:</t>

      <t>Publisher</t>

      <t>Receiver</t>

      <t>Subscription</t>

      <t>In addition, this document defines the following terms:</t>

      <t>Observation-time: Describes the measurement observation time for the
      "push-update" notification in a "periodical" subscription and the time
      when the network state change was observed.</t>

      <t>point-in-time: Describes at which point in time the value of
      observation-time was observed. For "periodical" subscription the value
      "current-accounting" describes the point in time where the metrics where
      being polled and observed. For "on-change" subsriptions, the value of
      point-in-time can be either "state-changed", when the state change was
      observed in real-time with or without sync on start option or "current-
      state", when it was observed after the YANG-Push subscription was
      established and the time since the state changed to current state is
      unkown.</t>
    </section>

    <section anchor="Streaming-Update"
             title="Extend the Streaming Update Notifications">
      <t>Besides the Subscription ID as described in Section 3.7 of <xref
      target="RFC8641"/>, the following network observation time metadata
      objects are part of "push-update" and "push-change-update"
      notifications.</t>

      <dl>
        <dt>observation-time:</dt>

        <dd>Describes the measurement observation time for the "push-update"
        notification in a "periodical" and for the "push-change-update"
        notification in a "on-change" subscription. By comparing the
        "observation-time" of two "push-update" notifications in a periodical
        subscription, the collector can deduce the actual cadence of the
        measurements, and compare it with the subscription configuration. In
        case of an "on-change" subscription it describes the time when the
        network state change was observed.</dd>

        <dt>point-in-time:</dt>

        <dd>Describes at which point in time the observation-time was
        observed. For "periodical" subscription this is either
        "accounting-start" or "accounting-end" describing the start or end of
        the accounting. For "on-change" subsriptions with or without sync on
        start option it is "state-changed" when the state change was observed
        in real-time. For "on-change" subsriptions with sync on start option
        it is "current-state" when it was observed after the YANG-Push
        subscription was established and the time since the state changed to
        current state is unkown.</dd>
      </dl>

      <t><xref target="timeline_examplen_fig"/> provides an example timeline
      of events to describe "point-in-time". At "T2", if the network node was
      capable to store the initial state change observation timestamp from
      "T1" prior to the YANG-Push subscription establishment at "T2", the
      observation-timestamp of "T1" is used and "point-in-time" is set to
      "state-changed". If the network node is not capable to store the
      timestamp prior to the YANG-Push subscription establishment at "T2", the
      observation-timestamp of "T2" is used and "point-in-time" is set to
      "current-state". Depending of capability and implementation of
      "periodical" YANG-Push subscription, either the "observation-timestamp"
      of "T3" with "point-in-time" is set to "accounting-start" or
      "observation-timestamp" of "T4" with "point-in-time" is set to
      "accounting-end".</t>

      <figure anchor="timeline_examplen_fig" title="Example timeline">
        <artwork><![CDATA[
Timeline
---------------------------------------------------------------------->
 | (T1) Interface | (T2) YANG-Push   | (T3) YANG-Push | (T4) YANG-Push
 | state changed  | "on-change sync  | "periodical"   | "periodical"
 | to "Up".       | on start" for    | current        | current
 |                | interface state  | accounting     | accounting.
 |                | and "periodical" |                |
 |                | for counters is  |                |
 |                | established.     |                |
 |                |                  |                |
 v                v                  v                v
        ]]></artwork>
      </figure>

      <t><xref target="push-change-update_example_json_fig"/> provides an
      example of a JSON encoded, <xref target="RFC8259"/>,
      "push-change-update" notification message over HTTPS-based <xref
      target="I-D.ietf-netconf-https-notif"/> or UDP-based <xref
      target="I-D.ietf-netconf-udp-notif"/> transport with <xref
      target="I-D.tgraf-netconf-notif-sequencing"/> as extension.</t>

      <figure anchor="push-change-update_example_json_fig"
              title="JSON Push Example for a on-change notification message">
        <artwork><![CDATA[
{
   "ietf-notification:notification": {
      "eventTime": "2023-02-04T16:30:11.22Z",
      "sysName": "example-router",
      "sequenceNumber": 187653,
      "ietf-yang-push:push-update": {
         "id": 1011,
         "observation-time": "2023-02-04T16:30:09.44Z",
         "point-in-time": "state-changed",
         "datastore-xpath-filter": "ietf-interfaces:interfaces",
         "datastore-contents": {
            "ietf-interfaces:interface": {
               "name": {
                  "eth0": {
                     "oper-status": "up"
                  }
               }
            }
         }
      }
   }
}
        ]]></artwork>
      </figure>
    </section>

    <section title="YANG-Push capabilities">
      <t>YANG-related system capabilites can be discovered by subscribing to
      the datastore defined in <xref target="RFC9196"/>. This document
      augments the "ietf-notification-capabilities" defined in <xref
      section="5" target="RFC9196"/> so that the YANG-Push receiver can learn
      the capabilities defined in this documents throught the datastore.</t>

      <t>The definition of this YANG augmentation is specified in <xref
      target="YANG-push-observation-timestamp-module"/>.</t>
    </section>

    <section anchor="YANG-push-observation-timestamp-module"
             title="The &quot;ietf-yang-push-observation-timestamp&quot; YANG Module">
      <t>This YANG module augments the "ietf-yang-push" module with the
      observation-time and point-in-time in the "push-update" and
      "push-change-update" streaming update notifications.</t>

      <section anchor="YANG-observation-timestamp-model"
               title="Data Model Overview">
        <section anchor="Tree View" title="Tree View">
          <t>This "ietf-yang-push-observation-timestamp" YANG module augments
          the "ietf-yang-push" YANG module specified in Section 5 of <xref
          target="RFC8641"/> adding the observation-time and the point-in-time
          leaves and augments "ietf-notification-capabilities" defined in
          <xref target="RFC9196"/> to add a system level capability.</t>

          <t><figure>
              <artwork><![CDATA[
module: ietf-yang-push-observation-timestamp

  augment /yp:push-update:
    +--ro observation-time?   yang:date-and-time
    +--ro point-in-time?      enumeration
  augment /yp:push-change-update:
    +--ro observation-time?   yang:date-and-time
    +--ro point-in-time?      enumeration
  augment /sysc:system-capabilities
            /notc:subscription-capabilities:
    +--ro yang-push-observation-supported?   notification-support
            {yang-push-observation-timestamp}?
]]></artwork>
            </figure></t>
        </section>

        <section anchor="Full Tree View" title="Full Tree View">
          <t>The following is the YANG tree diagram <xref target="RFC8340"/>
          showing the "ietf-yang-push" augmentation:</t>

          <t><figure>
              <artwork><![CDATA[
module: ietf-yang-push

  augment /sn:establish-subscription/sn:input:
    +---w (update-trigger)?
       +--:(periodic)
       |  +---w periodic!
       |     +---w period         centiseconds
       |     +---w anchor-time?   yang:date-and-time
       +--:(on-change) {on-change}?
          +---w on-change!
             +---w dampening-period?   centiseconds
             +---w sync-on-start?      boolean
             +---w excluded-change*    change-type
  augment /sn:establish-subscription/sn:input/sn:target:
    +--:(datastore)
       +-- datastore                               identityref
       +-- (selection-filter)?
          +--:(by-reference)
          |  +-- selection-filter-ref
          |          selection-filter-ref
          +--:(within-subscription)
             +-- (filter-spec)?
                +--:(datastore-subtree-filter)
                |  +-- datastore-subtree-filter?   <anydata>
                |          {sn:subtree}?
                +--:(datastore-xpath-filter)
                   +-- datastore-xpath-filter?     yang:xpath1.0
                           {sn:xpath}?
  augment /sn:modify-subscription/sn:input:
    +---w (update-trigger)?
       +--:(periodic)
       |  +---w periodic!
       |     +---w period         centiseconds
       |     +---w anchor-time?   yang:date-and-time
       +--:(on-change) {on-change}?
          +---w on-change!
             +---w dampening-period?   centiseconds
  augment /sn:modify-subscription/sn:input/sn:target:
    +--:(datastore)
       +-- datastore                               identityref
       +-- (selection-filter)?
          +--:(by-reference)
          |  +-- selection-filter-ref
          |          selection-filter-ref
          +--:(within-subscription)
             +-- (filter-spec)?
                +--:(datastore-subtree-filter)
                |  +-- datastore-subtree-filter?   <anydata>
                |          {sn:subtree}?
                +--:(datastore-xpath-filter)
                   +-- datastore-xpath-filter?     yang:xpath1.0
                           {sn:xpath}?
  augment /sn:subscription-started:
    +--ro (update-trigger)?
       +--:(periodic)
       |  +--ro periodic!
       |     +--ro period         centiseconds
       |     +--ro anchor-time?   yang:date-and-time
       +--:(on-change) {on-change}?
          +--ro on-change!
             +--ro dampening-period?   centiseconds
             +--ro sync-on-start?      boolean
             +--ro excluded-change*    change-type
  augment /sn:subscription-started/sn:target:
    +--:(datastore)
       +-- datastore                               identityref
       +-- (selection-filter)?
          +--:(by-reference)
          |  +-- selection-filter-ref
          |          selection-filter-ref
          +--:(within-subscription)
             +-- (filter-spec)?
                +--:(datastore-subtree-filter)
                |  +-- datastore-subtree-filter?   <anydata>
                |          {sn:subtree}?
                +--:(datastore-xpath-filter)
                   +-- datastore-xpath-filter?     yang:xpath1.0
                           {sn:xpath}?
  augment /sn:subscription-modified:
    +--ro (update-trigger)?
       +--:(periodic)
       |  +--ro periodic!
       |     +--ro period         centiseconds
       |     +--ro anchor-time?   yang:date-and-time
       +--:(on-change) {on-change}?
          +--ro on-change!
             +--ro dampening-period?   centiseconds
             +--ro sync-on-start?      boolean
             +--ro excluded-change*    change-type
  augment /sn:subscription-modified/sn:target:
    +--:(datastore)
       +-- datastore                               identityref
       +-- (selection-filter)?
          +--:(by-reference)
          |  +-- selection-filter-ref
          |          selection-filter-ref
          +--:(within-subscription)
             +-- (filter-spec)?
                +--:(datastore-subtree-filter)
                |  +-- datastore-subtree-filter?   <anydata>
                |          {sn:subtree}?
                +--:(datastore-xpath-filter)
                   +-- datastore-xpath-filter?     yang:xpath1.0
                           {sn:xpath}?
  augment /sn:filters:
    +--rw selection-filter* [filter-id]
       +--rw filter-id                         string
       +--rw (filter-spec)?
          +--:(datastore-subtree-filter)
          |  +--rw datastore-subtree-filter?   <anydata>
          |          {sn:subtree}?
          +--:(datastore-xpath-filter)
             +--rw datastore-xpath-filter?     yang:xpath1.0
                     {sn:xpath}?
  augment /sn:subscriptions/sn:subscription:
    +--rw (update-trigger)?
       +--:(periodic)
       |  +--rw periodic!
       |     +--rw period         centiseconds
       |     +--rw anchor-time?   yang:date-and-time
       +--:(on-change) {on-change}?
          +--rw on-change!
             +--rw dampening-period?   centiseconds
             +--rw sync-on-start?      boolean
             +--rw excluded-change*    change-type
  augment /sn:subscriptions/sn:subscription/sn:target:
    +--:(datastore)
       +--rw datastore                               identityref
       +--rw (selection-filter)?
          +--:(by-reference)
          |  +--rw selection-filter-ref
          |          selection-filter-ref
          +--:(within-subscription)
             +--rw (filter-spec)?
                +--:(datastore-subtree-filter)
                |  +--rw datastore-subtree-filter?   <anydata>
                |          {sn:subtree}?
                +--:(datastore-xpath-filter)
                   +--rw datastore-xpath-filter?
                           yang:xpath1.0 {sn:xpath}?

  rpcs:
    +---x resync-subscription {on-change}?
       +---w input
          +---w id    sn:subscription-id

  notifications:
    +---n push-update
    |  +--ro id?                      sn:subscription-id
    |  +--ro datastore-contents?      <anydata>
    |  +--ro incomplete-update?       empty
    |  +--ro ypot:observation-time?   yang:date-and-time
    |  +--ro ypot:point-in-time?      enumeration
    +---n push-change-update {on-change}?
       +--ro id?                      sn:subscription-id
       +--ro datastore-changes
       |  +--ro yang-patch
       |     +--ro patch-id    string
       |     +--ro comment?    string
       |     +--ro edit* [edit-id]
       |        +--ro edit-id      string
       |        +--ro operation    enumeration
       |        +--ro target       target-resource-offset
       |        +--ro point?       target-resource-offset
       |        +--ro where?       enumeration
       |        +--ro value?       <anydata>
       +--ro incomplete-update?       empty
       +--ro ypot:observation-time?   yang:date-and-time
       +--ro ypot:point-in-time?      enumeration
]]></artwork>
            </figure></t>

          <t>The following is the YANG tree diagram <xref target="RFC8340"/>
          showing the "ietf-system-capabilities" augmentation:</t>

          <t><figure>
              <artwork><![CDATA[

module: ietf-system-capabilities
  +--ro system-capabilities
     +--ro datastore-capabilities* [datastore]
     |  +--ro datastore
     |  |       -> /yanglib:yang-library/datastore/name
     |  +--ro per-node-capabilities* []
     |     +--ro (node-selection)?
     |     |  +--:(node-selector)
     |     |     +--ro node-selector?
     |     |             nacm:node-instance-identifier
     |     +--ro notc:subscription-capabilities
     |        +--ro notc:max-nodes-per-update?
     |        |       uint32
     |        +--ro notc:periodic-notifications-supported?
     |        |       notification-support
     |        +--ro (notc:update-period)?
     |        |  +--:(notc:minimum-update-period)
     |        |  |  +--ro notc:minimum-update-period?
     |        |  |          uint32
     |        |  +--:(notc:supported-update-period)
     |        |     +--ro notc:supported-update-period*
     |        |             uint32
     |        +--ro notc:on-change-supported?
     |        |       notification-support {yp:on-change}?
     |        +--ro notc:minimum-dampening-period?
     |        |       uint32 {yp:on-change}?
     |        +--ro notc:supported-excluded-change-type*
     |                union {yp:on-change}?
     +--ro notc:subscription-capabilities
        +--ro notc:max-nodes-per-update?               uint32
        +--ro notc:periodic-notifications-supported?
        |       notification-support
        +--ro (notc:update-period)?
        |  +--:(notc:minimum-update-period)
        |  |  +--ro notc:minimum-update-period?        uint32
        |  +--:(notc:supported-update-period)
        |     +--ro notc:supported-update-period*      uint32
        +--ro notc:on-change-supported?
        |       notification-support {yp:on-change}?
        +--ro notc:minimum-dampening-period?           uint32
        |       {yp:on-change}?
        +--ro notc:supported-excluded-change-type*     union
        |       {yp:on-change}?
        +--ro ypot:yang-push-observation-supported?
                notification-support
                {yang-push-observation-timestamp}?
]]></artwork>
            </figure></t>
        </section>
      </section>

      <section anchor="YANG-observation-timestamp-module" title="YANG Module">
        <t>The YANG module has one leave augmenting the model of <xref
        target="RFC8639">Subscription to YANG Notifications</xref>.</t>

        <t><figure>
            <artwork><![CDATA[
<CODE BEGINS> file "ietf-yang-push-observation-timestamping@2024-06-08.yang"
module ietf-yang-push-observation-timestamp {
  yang-version 1.1;
  namespace
    "urn:ietf:params:xml:ns:yang:ietf-yang-push-observation-timestamp";
  prefix ypot;
  import ietf-yang-types {
    prefix yang;
    reference
      "RFC 6991: Common YANG Data Types";
  }
  import ietf-yang-push {
    prefix yp;
    reference
      "RFC 8641: Subscription to YANG Notifications for Datastore Updates";
  }
  import ietf-system-capabilities {
    prefix sysc;
    reference
      "RFC 9196: YANG Modules Describing Capabilities for
       Systems and Datastore Update Notifications";
  }
  import ietf-notification-capabilities {
    prefix notc;
    reference
      "RFC 9196: YANG Modules Describing Capabilities for
       Systems and Datastore Update Notifications";
  }
  organization "IETF NETCONF (Network Configuration) Working Group";
  contact
    "WG Web:   <http:/tools.ietf.org/wg/netconf/>
     WG List:  <mailto:netconf@ietf.org>

     Authors:  Thomas Graf
               <mailto:thomas.graf@swisscom.com>
               Benoit Claise
               <mailto:benoit.claise@huawei.com>
               Alex Huang Feng
               <mailto:alex.huang-feng@insa-lyon.fr>";

  description
    "Defines YANG-Push event notification header with the observation
    time in streaming update notifications.

    Copyright (c) 2024 IETF Trust and the persons identified as
    authors of the code.  All rights reserved.

    Redistribution and use in source and binary forms, with or without
    modification, is permitted pursuant to, and subject to the license
    terms contained in, the Revised BSD License set forth in Section
    4.c of the IETF Trust's Legal Provisions Relating to IETF Documents
    (https://trustee.ietf.org/license-info).

    This version of this YANG module is part of RFC XXXX; see the RFC
    itself for full legal notices.";

  revision 2024-06-08 {
    description
      "First revision";
    reference
      "RFC XXXX: Support of YANG-Push Notifications Observation Time";
  }

  feature yang-push-observation-timestamp {
    description
      "This feature indicates the YANG-push Notifications support
      the observation timestamps in streaming update notifications.";
  }

  grouping yang-push-observation-timestamp {
    description
      "This grouping adds the observation timestamp for the observed metrics.";
    leaf observation-time {
      type yang:date-and-time;
      description
        "This is the time when metrics were observed.";
    }
    leaf point-in-time {
      type enumeration {
        enum current-accounting {
          description "For periodical subscriptions at the point-in-time
            where the metrics where being polled and observed.";
        }
        enum state-changed {
          description "For on-change or on-change sync on start 
            subscriptions the point in time when the state change was
            observed in real-time.";
        }
        enum current-state {
          description "For on-change sync on start subscriptions when the
            point in time when the state was observed after the YANG-Push
            subscription was established. The actual time when the state 
            changed to current is unkown.";
        }
      }
      description
      "This describes at which point in time the metrics were observed";
    }
  }

  // Event notifications
  augment "/yp:push-update" {
    description
      "This augmentation adds the observation timestamp of the accounted metrics
      in the push-update notification.";
    uses ypot:yang-push-observation-timestamp;
  }

  augment "/yp:push-change-update" {
    description
      "This augmentation adds the observation timestamp of the event 
      in the push-change-update notification.";
      uses ypot:yang-push-observation-timestamp;
  }

  // Event capabilities
  augment "/sysc:system-capabilities/notc:subscription-capabilities" {
    description
      "Add system level capabilities";
    leaf yang-push-observation-supported {
      if-feature "yang-push-observation-timestamp";
      type notification-support;
      description
        "Specifies whether the publisher supports exporting
        observation-timestamp and point-in-time in notifications.";
      reference
        "RFC XXXX: YANG Notifications Sequencing";
    }
  }
}
<CODE ENDS>]]></artwork>
          </figure></t>
      </section>
    </section>

    <section anchor="Implementation" title="Implementation Status">
      <t>Note to the RFC-Editor: Please remove this section before
      publishing.</t>

      <section anchor="SIXWIND" title="6WIND VSR">
        <t>6WIND implemented this document for a YANG Push publisher on <xref
        target="I-D.ietf-netconf-udp-notif">UDP-based Transport for Configured
        Subscriptions</xref> in their VSR platform.</t>
      </section>
    </section>

    <section anchor="Security" title="Security Considerations">
      <t>The security considerations for the YANG notifications subscription
      mechanism are described in <xref target="RFC8641"/>. This document adds
      no additional security considerations.</t>
    </section>

    <section anchor="IANA_Considerations" title="IANA Considerations">
      <t>This document describes the URI used for the IETF XML Registry and
      registers a new YANG module name.</t>

      <section anchor="IANA_URI" title="URI">
        <t>IANA is requested to add this document as a reference in the
        following URI in the IETF XML Registry <xref target="RFC3688"/>.</t>

        <dl>
          <dt>URI:</dt>

          <dd>urn:ietf:params:xml:ns:yang:ietf-yang-push-observation-timestamp</dd>

          <dt>Registrant Contact:</dt>

          <dd>The IESG.</dd>

          <dt>XML:</dt>

          <dd>N/A; the requested URI is an XML namespace.</dd>

          <dt>Reference:</dt>

          <dd>RFC5277; RFC-to-be</dd>
        </dl>
      </section>

      <section anchor="IANA_YANG_module_name" title="YANG module name">
        <t>This document registers the following YANG module in the YANG
        Module Names Registry <xref target="RFC6020"/>, within the "YANG
        Parameters" registry:</t>

        <dl>
          <dt>name:</dt>

          <dd>ietf-yang-push-observation-timestamp</dd>

          <dt>namespace:</dt>

          <dd>urn:ietf:params:xml:ns:yang:ietf-yang-push-observation-timestamp</dd>

          <dt>prefix:</dt>

          <dd>ypot</dd>

          <dt>Reference:</dt>

          <dd>RFC-to-be</dd>
        </dl>
      </section>
    </section>

    <section anchor="Acknowledgements" title="Acknowledgements">
      <t>The authors would like to thank Rob Wilton, Nick Corran, Pierre
      Francois Ahmed Elhassany and Jean Quilbeuf for their review and valuable
      comments.</t>
    </section>
  </middle>

  <back>
    <references title="Normative References">
      <?rfc include='http://xml.resource.org/public/rfc/bibxml/reference.RFC.9196.xml'?>

      <?rfc include='http://xml.resource.org/public/rfc/bibxml/reference.RFC.8639.xml'?>

      <?rfc include='http://xml.resource.org/public/rfc/bibxml/reference.RFC.8641.xml'?>

      <?rfc include='http://xml.resource.org/public/rfc/bibxml/reference.RFC.8340.xml'?>

      <?rfc include='http://xml.resource.org/public/rfc/bibxml/reference.RFC.6020.xml'?>

      <?rfc include='http://xml.resource.org/public/rfc/bibxml/reference.RFC.3688.xml'?>
    </references>

    <references title="Informative References">
      <?rfc include='http://xml.resource.org/public/rfc/bibxml/reference.RFC.8259.xml'?>

      <?rfc include='http://xml.resource.org/public/rfc/bibxml/reference.RFC.9232.xml'?>

      <?rfc include='http://xml.resource.org/public/rfc/bibxml-ids/reference.I-D.tgraf-netconf-notif-sequencing.xml'?>

      <?rfc include='http://xml.resource.org/public/rfc/bibxml-ids/reference.I-D.ietf-netconf-https-notif.xml'?>

      <?rfc include='http://xml.resource.org/public/rfc/bibxml-ids/reference.I-D.ietf-netconf-udp-notif.xml'?>
    </references>
  </back>
</rfc>
